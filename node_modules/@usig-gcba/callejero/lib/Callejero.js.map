{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ed3bed3d649401f9a713","webpack:///./src/Callejero.js","webpack:///./src/Calle.js","webpack:///./src/ErrorSinAlturas.js","webpack:///./src/ErrorSinDatos.js","webpack:///external \"@usig-gcba/usig-core\"","webpack:///external {\"root\":\"isomorphic-fetch\",\"commonjs2\":\"isomorphic-fetch\",\"commonjs\":\"isomorphic-fetch\",\"amd\":\"isomorphic-fetch\"}"],"names":["usig","data","defaults","Callejero","server","lazyDataLoad","loadFullDatabase","callesEnMinusculas","encoding","expirationTime","opts","myself","initialized","listeners","loadingData","matchea","wordsRE","calle","match","w","length","r","lastIndex","test","mergeDatosCruces","alert","i","push","guardarLocalStorage","expirationMS","record","calles","JSON","stringify","expiration","Date","getTime","localStorage","e","console","error","cargarCallejero","eventHandler","callejero","cargarCruces","fetch","then","response","json","log","_cargarCallejero","now","catch","cargarCalles","supports_html5_storage","Promise","resolve","callejeroLocalStorage","parse","err","window","ev","setHandler","handler","found","init","options","Object","assign","onReady","listo","override","buscarPorCodigo","codigo","ErrorSinDatos","index","core","binarySearch","a","b","Calle","construirCalle","unshift","getAlturas","nombre","alturas","forEach","alt","getCruces","cruces","seCruzaCon","calle1","calle2","cruces1","indexOf","matcheaCalle","str","limit","optsLowPrior","input","translate","replace","toUpperCase","trim","words","split","map","RegExp","snoRE","c","isNaN","parseInt","concat","splice","tieneTramosComoAv","getNombreCalle","altura","alturaValida","Array","inicializado","ErrorCalleSinAlturas","valid","calleToString","TIPO","cod","nom","tipo","toString","id","message","getErrorMessage","texts","ErrorEnCargaDelCallejero"],"mappings":"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","file":"Callejero.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@usig-gcba/usig-core\"), require(\"isomorphic-fetch\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Callejero\", [\"@usig-gcba/usig-core\", \"isomorphic-fetch\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Callejero\"] = factory(require(\"@usig-gcba/usig-core\"), require(\"isomorphic-fetch\"));\n\telse\n\t\troot[\"Callejero\"] = factory(root[\"@usig-gcba/usig-core\"], root[\"isomorphic-fetch\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ed3bed3d649401f9a713","import 'isomorphic-fetch'\nimport Calle from 'Calle'\nimport ErrorSinDatos from 'ErrorSinDatos'\nimport {ErrorCalleSinAlturas} from 'ErrorSinAlturas'\nimport core from '@usig-gcba/usig-core'\n\n// Definicion del namespace\nlet usig;\nif (typeof (usig) === \"undefined\")\n\tusig = {};\n\nif (typeof (usig.data) === \"undefined\")\n\tusig.data = {};\n\nif (typeof (usig.defaults) === \"undefined\")\n\tusig.defaults = {};\n\t\nusig.defaults.Callejero = {\n\tserver: 'https://servicios.usig.buenosaires.gob.ar/callejero',\n\t// server: '//liebre/wk/Callejero/src/www/server.php',\n\tlazyDataLoad: false,\n\tloadFullDatabase: true,\n\tcallesEnMinusculas: true,\n\tencoding: 'utf-8',\n\texpirationTime: 10080 // una semana\n};\n\n/**\n * @class Callejero\n * Esta clase es la interfaz con el callejero de USIG. Es un singleton y todos los metodos estan accesibles\n * a traves de usig.Callejero. El componente debe inicializarse previamente llamando al metodo init.\n * @namespace usig\n * @cfg {String} server URL del servidor de datos de calles. Tiene un valor por defecto.\n * @cfg {Boolean} lazyDataLoad Determina si los datos del callejero deben cargarse al inicializar \n * \t\tel componente o solo cuando se lo quiera usar por primera vez.\n * @cfg {Function} onReady Callback que es llamada cuando ya se cargaron los datos del callejero.\n * @singleton\n*/\nlet opts = {},\n    myself = this,\n    initialized = false,\n    listeners = {\n        'ready': []\n    },\n    loadingData = false;\n\n/**\n * Busca las palabras de la direccion ingresada, en las keyword de un registro del callejero\n * @param {Array} wordsRE Array de expresiones regulares de las palabras a buscar\n * @param {Array} calle Array con los datos de una calle del callejero\n * @return {boolean} true si todas las palabras de wordsRE coinciden con el comienzo de alguna palabra de las keywords de calle.\n */\nfunction matchea(wordsRE, calle) {\n    var match = true;\n    for (var w=0;w<wordsRE.length;w++) {\n        var r =  wordsRE[w];\n        r.lastIndex = 0;\n        if (!r.test(calle[2])){\n            match = false;\n            break;\n        }\n    }\n    return match;\n}\n\nfunction mergeDatosCruces(data) {\n    loadingData = false;\n    if (data.length != usig.data.Callejero.length) {\n        alert('Se produjo un error al cargar la información de cruces de calles.');\n        return;\n    }\n    for (var i=0; i<usig.data.Callejero.length; i++) {\n        usig.data.Callejero[i].push(data[i]);\n    }\n}\n\nfunction guardarLocalStorage(data) {\n  var expirationMS = opts.expirationTime * 60 * 1000;\n  var record = { calles: JSON.stringify(data), expiration: new Date().getTime() + expirationMS };\n  try {\n    if (localStorage) localStorage[\"callejero\"] = JSON.stringify(record);\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction cargarCallejero(data) {\n  initialized = true;\n  usig.data.Callejero = data;\n  loadingData = false;\n  eventHandler('ready');\n  return callejero;\n}\n\nfunction cargarCruces() {\n    loadingData = true;\n\n    fetch(opts.server + \"?full=1&cruces=1&encoding=\" + opts.encoding)\n        .then(\n            response => response.json(),\n            error => console.log('Error!')\n        )\n        .then(json => mergeDatosCruces(json));\n}\n\nfunction _cargarCallejero() {\n    loadingData = true;\n\n    let data = opts.loadFullDatabase ? `?full=1&encoding=${opts.encoding}&minusculas=${opts.callesEnMinusculas? 1:0}` : `?encoding=${opts.encoding}&minusculas=${opts.callesEnMinusculas? 1:0}`;\n    return fetch(opts.server + data + \"&date=\" + Date.now())\n        .then(\n            response => response.json()\n        ).catch(error => {throw (error)})\n        .then(\n          (json) => {\n              guardarLocalStorage(json);\n              return cargarCallejero(json)\n          }\n        ).catch(error => {throw (error)})\n}\n// Comollego puede enviar un callejero cargado en memoria\nfunction cargarCalles(callejero) {\n    if (!loadingData) {\n        if (!supports_html5_storage()) {\n            return callejero ? new Promise((resolve) => resolve(cargarCallejero(callejero))) : _cargarCallejero();\n        }else{ // soporta HTML5\n\n            var callejeroLocalStorage;\n            try {\n                if (localStorage[\"callejero\"]) callejeroLocalStorage = JSON.parse(localStorage[\"callejero\"]);\n\n                if (callejeroLocalStorage && callejeroLocalStorage.calles && callejeroLocalStorage.calles.length > 500) {\n                    // Ya hay una copia del callejero en localStorage\n                    // Si la version guardada es vieja, se vuelve a buscar, sino se usa el guardado\n                    // Si falla la busqueda, devuelvo el que tenia guardado\n                    return (new Date().getTime() < callejeroLocalStorage.expiration) ? new Promise((resolve) => resolve(cargarCallejero(JSON.parse(callejeroLocalStorage.calles)))) : _cargarCallejero().catch((err) => cargarCallejero(JSON.parse(callejeroLocalStorage.calles)));\n                }else{\n                    // Si no hay datos en localStorage, uso el callejero que me pasan\n                    if (callejero) {\n                        guardarLocalStorage(callejero);\n                      return new Promise((resolve) => resolve(cargarCallejero(callejero)));\n                    }\n                    // Si no me pasaon ninguno, lo voy a buscar\n                    return _cargarCallejero().catch((err) => {throw (err)});\n                }\n            } catch(e) {\n                // Por si falla algun paso, se va a buscar el callejero o se usa el que me pasan\n                console.error(e);\n                return callejero ? new Promise((resolve) => resolve(cargarCallejero(callejero))) : _cargarCallejero();\n            }\n        }\n    }\n}\n\nfunction supports_html5_storage() {\n    try {\n        return 'localStorage' in window && window['localStorage'] !== null;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction eventHandler(ev) {\n    for (var i=0; i<listeners[ev].length; i++) {\n        listeners[ev][i]();\n    }\n}\n\nfunction setHandler(ev, handler) {\n    var found = false;\n    for (var i=0; i < listeners[ev].length; i++) {\n        found = found || (listeners[ev][i] == handler);\n    }\n    if (!found) {\n        listeners[ev].push(handler);\n    }\n}\n\nconst callejero = {\n    /**\n     * Inicializa el componente previo a su primer uso.\n     * @param {Object} options (optional) Objeto conteniendo overrides para las opciones por defecto.\n     * @return {Object} Devuelve una referencia al componente.\n     */\n    init: (options) => {\n        opts = Object.assign({}, usig.defaults.Callejero, options);\n\n        if (typeof(opts.onReady) === \"function\") {\n            setHandler('ready', opts.onReady);\n        }\n        if ((!usig.data.Callejero && !opts.lazyDataLoad) || (usig.data.Callejero && (usig.data.Callejero.calles || (usig.data.Callejero.calles && usig.data.Callejero.calles.length < 500)))) {\n            return cargarCalles(opts.callejero).catch((err) => {\n                // Si falla la busqueda y tengo un callejero en memoria, devuelvo ese.\n                if (opts.callejero) return cargarCallejero(opts.callejero);\n                throw(err);\n            });\n        } else if (usig.data.Callejero) {\n            eventHandler('ready');\n            listeners['ready'] = [];\n        }\n        return new Promise((resolve) => resolve(callejero));\n    },\n\n    /**\n     * Pide los datos de las calles.\n     * @param {Object} options (optional) Objeto indicando que hacer en el caso de que ya existan datos para las calles.\n     * @return {Promise} promise conteniendo el objeto callejero actual o con los datos actualizados.\n     */\n    cargarCalles: (options) => {\n        if (options && callejero.listo()) return options.override ? cargarCalles() : new Promise((resolve) => resolve(callejero));\n        return cargarCalles();\n    },\n    /**\n     * Busca calle por codigo y devuelve una lista de objetos calle\n     * @param {int} codigo Codigo de calle a buscar\n     * @return {Array of Calle} Calles encontradas\n     * @throws {ErrorSinDatos} excepcion si no hay datos cargados.\n     */\n    buscarPorCodigo: (codigo) => {\n        if (!callejero.listo()) throw new ErrorSinDatos();\n        var calles = [];\n        if(/^[0-9]+$/.test(codigo)){\n            var index = core.binarySearch(usig.data.Callejero, codigo, (a, b) => a[0]-b);\n            if (index > -1){\n                var match = usig.data.Callejero[index];\n                calles.push(Calle.construirCalle(match[0], match[1]));\n                let i = index + 1;\n                while(i < usig.data.Callejero.length && usig.data.Callejero[i][0] === codigo){\n                    match = usig.data.Callejero[i];\n                    calles.push(Calle.construirCalle(match[0], match[1]));\n                    i++;\n                }\n                i = index - 1;\n                while(i >= 0 && usig.data.Callejero[i][0] === codigo){\n                    match = usig.data.Callejero[i];\n                    calles.unshift(Calle.construirCalle(match[0], match[1]));\n                    i--;\n                }\n            }\n        }\n        return calles;\n    },\n    /**\n     * Devuelve las alturas de una calle a partir de su codigo\n     * @param {int} codigo Codigo de calle a buscar\n     * @return {Array of int} Alturas encontradas\n     * @throws {ErrorSinDatos} excepcion si no hay datos cargados.\n     */\n    getAlturas: (codigo, nombre) => {\n        if (!callejero.listo()) throw new ErrorSinDatos();\n        var alturas = [];\n        if(/^[0-9]+$/.test(codigo)){\n            var index = core.binarySearch(usig.data.Callejero, codigo, (a, b) => a[0]-b);\n            if (index > -1){\n                var match = usig.data.Callejero[index];\n                if (match[1] === nombre) match[3].forEach(alt => alturas.push(alt));\n                let i = index + 1;\n                while (i < usig.data.Callejero.length && usig.data.Callejero[i][0] === codigo) {\n                    if (usig.data.Callejero[i][1] === nombre) {\n                        match = usig.data.Callejero[i];\n                        match[3].forEach(function (alt) {\n                            return alturas.push(alt);\n                        });\n                    }\n                    i++;\n                }\n                i = index - 1;\n                while (i >= 0 && usig.data.Callejero[i][0] === codigo) {\n                    if (usig.data.Callejero[i][1] === nombre) {\n                        match = usig.data.Callejero[i];\n                        match[3].forEach(function (alt) {\n                            return alturas.push(alt);\n                        });\n                    }\n                    i--;\n                }\n            }\n        }\n        return alturas;\n    },\n    /**\n     * Devuelve los cruces de una calle a partir de su codigo y su nombre\n     * @param {int} codigo Codigo de calle a buscar\n     * @param {string} nombre Codigo de calle a buscar\n     * @return {Array of int} Alturas encontradas\n     * @throws {ErrorSinDatos} excepcion si no hay datos cargados.\n     */\n    getCruces: (codigo, nombre) => {\n        if (!callejero.listo()) throw new ErrorSinDatos();\n        var cruces = [];\n        if(/^[0-9]+$/.test(codigo)){\n            var index = core.binarySearch(usig.data.Callejero, codigo, (a, b) => a[0]-b);\n            if (index > -1){\n                var match = usig.data.Callejero[index];\n                if (match[1] === nombre) match[4].forEach(alt => cruces.push(alt));\n                let i = index + 1;\n                while (i < usig.data.Callejero.length && usig.data.Callejero[i][0] === codigo) {\n                    if (usig.data.Callejero[i][1] === nombre){\n                      match = usig.data.Callejero[i];\n                      match[4].forEach(function (alt) {\n                        return cruces.push(alt);\n                      });\n                    }\n                    i++;\n                }\n                i = index - 1;\n                while (i >= 0 && usig.data.Callejero[i][0] === codigo) {\n                    if (usig.data.Callejero[i][1] === nombre) {\n                      match = usig.data.Callejero[i];\n                      match[4].forEach(function (alt) {\n                        return cruces.push(alt);\n                      });\n                    }\n                    i--;\n                }\n            }\n        }\n        return cruces;\n    },\n    /**\n     * Verifica si la calle (instancia de la clase usig.Calle) recibida como parametro\n     * se cruza con esta\n     * @param {usig.Calle} calle1 Calle a verificar si se intersecta con esta\n     * @param {usig.Calle} calle2 Calle a verificar si se intersecta con esta\n     * @return {Boolean} True en caso de que exista el cruce correspondiente\n     */\n    seCruzaCon: (calle1, calle2) => {\n        const cruces1 = callejero.getCruces(calle1.codigo, calle1.nombre);\n        if (cruces1) {\n            return cruces1.indexOf(calle2.codigo) >= 0;\n        }\n    },\n    /**\n     * Busca calles cuyo nombre se corresponda con str y devuelve un array con todas las instancias\n     * de usig.Calle halladas\n     * @param {String} str String a matchear\n     * @param {Integer} limit Maximo numero de respuestas a devolver\n     * @return {Array} Array de instancias de usig.Calle que matchearon str\n     */\n    matcheaCalle: (str, limit) => {\n        if (!callejero.listo()) throw new ErrorSinDatos();\n        var opts = [];\n        var optsLowPrior = [];\n        var input = core.translate(str.replace(/\"/g, \"\"), 'áéíóúüÁÉÍÓÚÜàèìòùÀÈÌÒÙ', 'aeiouuAEIOUUaeiouAEIOU').toUpperCase().trim();\n        var words = input.split(' ');\n        const wordsRE = words.map(function(w){return new RegExp(\"^\"+w+\"| \"+w, \"gi\")});\n        var snoRE = new RegExp(\"SNO|SIN NOMBRE OFICIAL|NO OFICIAL|PASAJE|PJE\",'i');\n        if (callejero.listo()) {\n            for (var c=0;c<usig.data.Callejero.length;c++) {\n                if (matchea(wordsRE, usig.data.Callejero[c])) {\n                    /** almaceno las calles que no tienen nombre oficial o altura en una lista de baja prioridad **/\n                    if (!snoRE.test(usig.data.Callejero[c][1]) && usig.data.Callejero[c][3].length !== 0){\n                        opts.push(Calle.construirCalle(usig.data.Callejero[c][0], usig.data.Callejero[c][1]));\n                    } else {\n                        optsLowPrior.push(Calle.construirCalle(usig.data.Callejero[c][0], usig.data.Callejero[c][1]));\n                    }\n                    if (!isNaN(parseInt(limit)) && opts.length >= parseInt(limit))\n                        break;\n                }\n            }\n            /** junto las listas de resultado de alta y baja prioridad y devuelvo hasta la cantidad limit **/\n            opts = opts.concat(optsLowPrior)\n            if (!isNaN(parseInt(limit)) && opts.length >= parseInt(limit)){\n                opts = opts.splice(0,limit);\n            }\n            if (usig.data.Callejero[0].length < 5 && !loadingData) {\n                cargarCruces();\n            }\n        } else {\n            cargarCalles();\n            throw(new ErrorSinDatos());\n        }\n        return opts;\n    },\n\n    /**\n     * Determina si una calle tiene tramos como Av.\n     * @param {int} codigo numero de codigo de la calle\n     * @return {Boolean} Retorna True en caso de que la calle tenga tramos como Av.\n     */\n    tieneTramosComoAv: (codigo) => {\n\t\t/* ATTENTI RAGAZZI\n\t\t * Esto funciona estrictamente porque la base de calles viene ordenada por codigo de calles y\n\t\t * la unica posibilidad de que una calle tenga tramos como av y calle simultaneamente es que\n\t\t * haya un par de registros consecutivos con el mismo codigo (uno para c/caso)\n\t\t */\n        if (!callejero.listo()) throw new ErrorSinDatos();\n        let index = core.binarySearch(usig.data.Callejero, codigo, (a, b) => a[0]-b);\n        return index > 0 && codigo !== 0 && (usig.data.Callejero[index-1][0] === codigo || usig.data.Callejero[index+1][0] === codigo);\n    },\n\n    /**\n     * Permite consultar el nombre oficial de una calle dado su codigo y una altura dada\n     * @param {int} codigo Codigo oficial de la calle\n     * @param {int} altura Altura de la calle\n     * @return {String} Retorna el nombre de la calle asociada al codigo indicado en la altura\n     * dada o una cadena vacia en caso de error de codigo o altura.\n     */\n    getNombreCalle: (codigo, altura) => {\n        var calles = callejero.buscarPorCodigo(codigo);\n        for (var i=0; i<calles.length; i++) {\n            if (callejero.alturaValida(calles[i], altura)) {\n                return calles[i].nombre;\n            }\n        }\n        return \"\";\n    },\n\n    /**\n     * Indica si ya se cargaron los datos del callejero.\n     * @return {Boolean} Retorna True en caso de que ya se hayan cargado los datos del callejero.\n     */\n    listo: () => {\n        return usig.data.Callejero && usig.data.Callejero instanceof Array && usig.data.Callejero.length !== 0;\n    },\n\n    /**\n     * Indica si el componente ya ha sido inicializado.\n     * @return {Boolean} Retorna True si ya se ha llamado al metodo init.\n     */\n    inicializado: () => {\n        return initialized;\n    },\n    /**\n     * Verifica si la altura es valida para esta calle.\n     * @param {Calle} calle a validar\n     * @param {int} alt Altura a validar\n     * @return {Boolean} True si la altura es valida para esta calle\n     */\n    alturaValida: (calle, alt) => {\n        calle.alturas = callejero.getAlturas(calle.codigo, calle.nombre);\n        if (calle.alturas instanceof Array) {\n            if (calle.alturas.length === 0) {\n                throw(new ErrorCalleSinAlturas(calle.nombre));\n                return false;\n            }\n            let valid = false;\n            for(let a in calle.alturas) {\n                valid = valid || ((parseInt(calle.alturas[a][0]) <= parseInt(alt)) && (parseInt(calle.alturas[a][1]) >= parseInt(alt)));\n            }\n            return valid;\n        }\n    },\n\n    /**\n     * Devuelve un string con el nombre de la calle\n     * @return {String} Nombre de la calle\n     */\n    calleToString: (calle) => {\n        return calle.nombre;\n    },\n};\n\nexport default callejero;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Callejero.js","/**\n * @class Calle\n * @namespace usig\n * @constructor\n * @param {Integer} cod Codigo de calle\n * @param {String} nom Nombre oficial de la calle\n * @param {Array} alturas (optional) Array conteniendo los rangos de altura validos para esta calle\n * @param {Array} cruces (optional) Array conteniendo los id de las calles que se cruzan con esta\n */\n\nconst TIPO = \"CALLE\";\nexport default {\n\tconstruirCalle: (cod, nom) => {\n\t\treturn {\n\t\t\tcodigo: cod,\n\t\t\tnombre: nom,\n\t\t\ttipo: TIPO,\n\t\t\ttoString: nom\n\t\t}\n\t},\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Calle.js","/**\n * Created by federuiz on 7/14/17.\n */\n/**\n * @class ErrorCalleSinAlturas\n * @namespace usig\n * @constructor\n * @param {String} str Nombre oficial de la calle\n */\nexport function ErrorCalleSinAlturas(str) {\n    this.id = 3;\n    this.message = 'La calle {calle} no posee alturas oficiales. Utilice intersecciones para hallar direcciones v&aacute;lidas sobre esta calle o escriba S/N en lugar de la altura.'\n\n    /**\n     * Devuelve un mensaje de error con el nombre de la calle\n     * @return {String} Mensaje de error\n     */\n    this.toString = function() {\n        return this.message.replace('{calle}', str);\n    };\n\n    /**\n     * Devuelve el nombre de la calle\n     * @return {String} Nombre de la calle\n     */\n    this.getNombreCalle = function() {\n        return str;\n    };\n\n    /**\n     * Devuelve un mensaje de error más descriptivo y amigable\n     * @return {String} Mensaje de error\n     */\n    this.getErrorMessage = function() {\n        return usig.ErrorCalleSinAlturas.defaults.texts.message.replace('{calle}', str);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ErrorSinAlturas.js","/**\n * @class ErrorEnCargaDelCallejero\n * @namespace usig\n * @constructor\n */\nfunction ErrorEnCargaDelCallejero (){\n\n    this.message = \"El callejero no se encuentra cargado aún o se produjo un error al intentar cargarlo\";\n    /**\n     * Devuelve un mensaje de error\n     * @return {String} Mensaje de error\n     */\n    this.toString = function() {\n        return \"Callejero no disponible.\";\n    };\n\n    /**\n     * Devuelve un mensaje de error más descriptivo y amigable\n     * @return {String} Mensaje de error\n     */\n    this.getErrorMessage = function() {\n        return this.message;\n    }\n}\nexport default ErrorEnCargaDelCallejero;\n\n\n// WEBPACK FOOTER //\n// ./src/ErrorSinDatos.js","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@usig-gcba/usig-core\"\n// module id = 4\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"isomorphic-fetch\",\"commonjs2\":\"isomorphic-fetch\",\"commonjs\":\"isomorphic-fetch\",\"amd\":\"isomorphic-fetch\"}\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}